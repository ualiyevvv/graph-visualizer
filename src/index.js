import {Graph} from "./graph";
import {ForceDirectedGraph} from "./graphLayout";


const myGraph = new Graph();

// Добавление узлов
const nodeA = { id: "A", size: 20 };
const nodeB = { id: "B", size: 30000000000 };
const nodeC = { id: "C", size: 25 };
const nodeC1 = { id: "C1", size: 250000 };
const nodeC2 = { id: "C2", size: 25000 };
const nodeC3 = { id: "C3", size: 2500 };
const nodeC4 = { id: "C4", size: 250 };
const nodeC41 = { id: "C41", size: 250 };
const nodeC42 = { id: "C42", size: 250 };
const nodeC43 = { id: "C43", size: 250 };
const nodeC44 = { id: "C44", size: 250 };
const nodeC45 = { id: "C45", size: 250 };
const nodeC451 = { id: "C451", size: 250 };
const nodeC452 = { id: "C452", size: 250 };
const nodeC453 = { id: "C453", size: 250 };
const nodeC454 = { id: "C454", size: 250 };
const nodeC455 = { id: "C455", size: 250 };
const nodeC456 = { id: "C456", size: 250 };
const nodeC457 = { id: "C457", size: 250 };
const nodeC458 = { id: "C458", size: 250 };
const nodeC5 = { id: "C5", size: 25 };
const nodeC51 = { id: "C51", size: 25 };
const nodeC52 = { id: "C52", size: 25 };
const nodeC53 = { id: "C53", size: 25 };
const nodeC54 = { id: "C54", size: 25 };

myGraph.addNode(nodeA);
myGraph.addNode(nodeB);
myGraph.addNode(nodeC);
myGraph.addNode(nodeC1);
myGraph.addNode(nodeC2);
myGraph.addNode(nodeC3);
myGraph.addNode(nodeC4);
myGraph.addNode(nodeC41);
myGraph.addNode(nodeC42);
myGraph.addNode(nodeC43);
myGraph.addNode(nodeC44);
myGraph.addNode(nodeC45);
myGraph.addNode(nodeC451);
myGraph.addNode(nodeC452);
myGraph.addNode(nodeC453);
myGraph.addNode(nodeC454);
myGraph.addNode(nodeC455);
myGraph.addNode(nodeC456);
myGraph.addNode(nodeC457);
myGraph.addNode(nodeC458);
myGraph.addNode(nodeC5);
myGraph.addNode(nodeC51);
myGraph.addNode(nodeC52);
myGraph.addNode(nodeC53);
myGraph.addNode(nodeC54);

// Добавление направленных рёбер
myGraph.addDirectedEdge(nodeB, nodeA, 2);
myGraph.addDirectedEdge(nodeC, nodeA, 5);
myGraph.addDirectedEdge(nodeC1, nodeA, 5);
myGraph.addDirectedEdge(nodeC2, nodeA, 10);
myGraph.addDirectedEdge(nodeC3, nodeA, 30);
myGraph.addDirectedEdge(nodeC4, nodeA, 15);
myGraph.addDirectedEdge(nodeC41, nodeA, 0);
myGraph.addDirectedEdge(nodeC42, nodeA, 1500);
myGraph.addDirectedEdge(nodeC43, nodeA, 15000);
myGraph.addDirectedEdge(nodeC44, nodeA, 1500);
myGraph.addDirectedEdge(nodeC45, nodeA, 15);
myGraph.addDirectedEdge(nodeC451, nodeA, 15);
myGraph.addDirectedEdge(nodeC452, nodeA, 15000);
myGraph.addDirectedEdge(nodeC453, nodeA, 15000);
myGraph.addDirectedEdge(nodeC454, nodeA, 15);
myGraph.addDirectedEdge(nodeC455, nodeA, 1500);
myGraph.addDirectedEdge(nodeC456, nodeA, 15);
myGraph.addDirectedEdge(nodeC457, nodeA, 15);
myGraph.addDirectedEdge(nodeC458, nodeA, 15);
myGraph.addDirectedEdge(nodeC45, nodeA, 15);
myGraph.addDirectedEdge(nodeC45, nodeA, 15);
myGraph.addDirectedEdge(nodeC5, nodeA, 15);
myGraph.addDirectedEdge(nodeC51, nodeC5, 1500);
myGraph.addDirectedEdge(nodeC52, nodeC5, 50000);
myGraph.addDirectedEdge(nodeC53, nodeC5, 5000);
myGraph.addDirectedEdge(nodeC54, nodeC5, 250000000000);

const canvas = document.getElementById("graphCanvas");
const visualization = new ForceDirectedGraph(myGraph, canvas);
visualization.graphInit();
