(()=>{"use strict";let t=new class{constructor(){this.nodes=new Map}addNode(t){this.nodes.has(t)||this.nodes.set(t,new Set)}addEdge(t,s){if(!this.nodes.has(t)||!this.nodes.has(s))throw new Error("Both nodes must be added to the graph before adding an edge.");this.nodes.get(t).add(s),this.nodes.get(s).add(t)}removeNode(t){if(this.nodes.has(t)){for(let s of this.nodes.get(t))this.nodes.get(s).delete(t);this.nodes.delete(t)}}removeEdge(t,s){this.nodes.has(t)&&this.nodes.has(s)&&(this.nodes.get(t).delete(s),this.nodes.get(s).delete(t))}getNeighbors(t){return this.nodes.has(t)?Array.from(this.nodes.get(t)):[]}hasNode(t){return this.nodes.has(t)}hasEdge(t,s){return this.nodes.has(t)&&this.nodes.get(t).has(s)}};["A","Av","Ab","An","Ak","Aj","Ah","Ag","Af","As","As1","As2","As3","As4","As5","As52"].map((s=>t.addNode(s))),[["A","Av"],["A","Ak"],["A","Ah"],["A","Af"],["A","Aj"],["Ak","Ab"],["Ak","An"],["Ak","As2"],["Ak","As"],["Ak","Ag"],["Af","As4"],["Af","As3"],["Af","As1"],["Af","As52"],["Af","As5"]].map((s=>t.addEdge(s[0],s[1])));let s=new class{MIN_X=-1e3;MIN_Y=-1e3;MAX_X=1e3;MAX_Y=1e3;MIN_SCALE=.1;MAX_SCALE=10;ZOOM_FACTOR=1.1;constructor(t,s){this.WIDTH=window.innerWidth,this.HEIGHT=window.innerHeight,this.graph=t,this.canvas=document.getElementById(s),this.ctx=this.canvas.getContext("2d"),this.canvas.width=this.WIDTH,this.canvas.height=this.HEIGHT,this.nodePositions=new Map,this.animationFrameRequest=null,this.animationStopTimeout=null,this.repulsionForce=80,this.attractionForce=.1,this.lastMoveTimestamp=0,this.moveThrottleInterval=20,this.windowCenter={x:this.WIDTH/2,y:this.HEIGHT/2},this.scale=1,this.offsetX=0,this.offsetY=0,this.zoomDelta=1,this.startX=0,this.startY=0,this.isDragging=!1,this.draggingNode=null,this.nodeRadius=10,this.initializeMouseEvents()}initializeMouseEvents(){this.canvas.addEventListener("wheel",(t=>this.handleZoom(t))),this.canvas.addEventListener("mousedown",(t=>this.handleMouseDown(t))),this.canvas.addEventListener("mousemove",(t=>this.handleMouseMove(t))),this.canvas.addEventListener("mouseup",(t=>this.handleMouseUp(t)))}graphInit(){this.initGraphStructure(),this.startAnimatingGraph(),this.stopAnimatingGraph()}stopAnimatingGraph(){this.animationStopTimeout=setTimeout((()=>{this.stopAnimationFrame()}),3500)}initGraphStructure(){const t=Math.min(1,1)/2,s=this.graph.nodes.size;let e=2*Math.PI/s,i=0;for(let s of this.graph.nodes.keys()){let o=i*e;this.nodePositions.set(s,{x:1+t*Math.cos(o),y:1+t*Math.sin(o)}),i++}}updateNodePositions(){for(let[t,s]of this.nodePositions){let e=0,i=0;for(let[o,h]of this.nodePositions)if(t!==o){let t=s.x-h.x,o=s.y-h.y,n=Math.sqrt(t*t+o*o);if(n>0){let s=this.repulsionForce/n;e+=s*t/n,i+=s*o/n}}for(let o of this.graph.getNeighbors(t))if(this.nodePositions.has(o)){let t=this.nodePositions.get(o),h=t.x-s.x,n=t.y-s.y;e+=this.attractionForce*h,i+=this.attractionForce*n}s.x+=e,s.y+=i}}startAnimatingGraph(){this.animationFrameRequest=!0;const t=()=>{this.animationFrameRequest&&(console.log("animation"),this.updateNodePositions(),this.drawGraph(),requestAnimationFrame(t))};t()}stopAnimationFrame(){this.animationFrameRequest&&(cancelAnimationFrame(this.animationFrameRequest),this.animationFrameRequest=null)}drawGraph(){this.ctx.save(),this.ctx.clearRect(0,0,this.WIDTH,this.HEIGHT),this.ctx.setTransform(this.scale,0,0,this.scale,this.windowCenter.x,this.windowCenter.y),this.ctx.strokeStyle="black";for(let[t,s]of this.graph.nodes)s.forEach((s=>{this.nodePositions.has(t)&&this.nodePositions.has(s)&&(this.ctx.beginPath(),this.ctx.moveTo(this.nodePositions.get(t).x,this.nodePositions.get(t).y),this.ctx.lineTo(this.nodePositions.get(s).x,this.nodePositions.get(s).y),this.ctx.stroke())}));for(let[t,s]of this.nodePositions)this.ctx.fillStyle="red",this.ctx.beginPath(),this.ctx.arc(s.x,s.y,this.nodeRadius,0,2*Math.PI),this.ctx.fill(),this.ctx.fillStyle="blue",this.ctx.textAlign="center",this.ctx.textBaseline="middle",this.ctx.fillText(t,s.x,s.y);this.ctx.fillStyle="red",this.ctx.fillRect(-25,-25,50,50),this.ctx.fillStyle="blue",this.ctx.fillRect(1e3,1e3,50,50),this.ctx.fillRect(-1e3,1e3,50,50),this.ctx.fillRect(-1e3,-1e3,50,50),this.ctx.fillRect(1e3,-1e3,50,50),this.ctx.restore()}draw(){this.ctx.save(),this.ctx.clearRect(0,0,this.WIDTH,this.HEIGHT),this.ctx.setTransform(this.scale,0,0,this.scale,this.windowCenter.x,this.windowCenter.y),this.ctx.translate(this.offsetX,this.offsetY),this.drawGraph(),this.zoomDelta=1,this.ctx.restore()}handleMouseDown(t){const s=parseInt((t.clientX-this.canvas.offsetLeft-this.windowCenter.x)/this.scale)+-this.offsetX,e=parseInt((t.clientY-this.canvas.offsetTop-this.windowCenter.y)/this.scale)+-this.offsetY;console.log("x:",s,"y:",e),console.log("map sost",this.scale),console.log(this.nodePositions),console.log("SOST after IF1",this.draggingNode);for(let[t,e]of this.nodePositions){if(s>e.x-this.nodeRadius/2&&s<e.x+this.nodeRadius/2){this.draggingNode=t,console.log(t),this.startAnimatingGraph();break}this.draggingNode=null}this.startX=t.clientX,this.startY=t.clientY,console.log("SOST after IF",this.draggingNode)}handleMouseMove(t){const s=parseInt((t.clientX-this.canvas.offsetLeft-this.windowCenter.x)/this.scale)+-this.offsetX,e=parseInt((t.clientY-this.canvas.offsetTop-this.windowCenter.y)/this.scale)+-this.offsetY;if(this.draggingNode){clearTimeout(this.animationStopTimeout);const t=this.nodePositions.get(this.draggingNode);t.x=s,t.y=e}}handleMouseUp(){this.draggingNode&&this.stopAnimatingGraph(),this.draggingNode=null}handleZoom(t){const s=Math.max(-1,Math.min(1,t.wheelDelta||-t.detail));this.zoom(s)}zoom(t){this.zoomDelta=t>0?this.ZOOM_FACTOR:1/this.ZOOM_FACTOR,this.scale*=this.zoomDelta,this.scale<this.MIN_SCALE&&(this.scale=this.MIN_SCALE),this.scale>this.MAX_SCALE&&(this.scale=this.MAX_SCALE),this.draw()}}(t,"graphCanvas");s.graphInit()})();